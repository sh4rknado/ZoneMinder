# Configuration file for object detection

# *=========================================================================================================*
# |                               GENERAL CONFIGURATION PORTAL ZONEMINDER                                   |
# *=========================================================================================================*
[general]
portal=https://zerocoolipcam.duckdns.org/zm
user=zerocool
password=zerocool
allow_self_signed=yes

# *============================================*
# | Compare the last event with current events |
# | in getting rid of static objects that get  |
# | detected due to some motion.               |
# *============================================*
#match_past_detections=yes
match_past_detections=no

# *================================================*
# | The max difference in area between the objects |
# | Default value is 5% and it's work well         |
# | ONLY IF #match_past_detections=yes             |
# *================================================*
past_det_max_diff_area=5%

# *===========================================*
# |  Sequence of models to run for detection  |
# *===========================================*
models=yolo,face

# *==========================*
# | Loop on models if first  |
# | sucess then break        |
# *==========================*
detection_mode=all

# *===================*
# |  Basic Auth ZM    |
# *===================*
basic_user=zerocool
basic_password=zerocool

# *================================== *
# | Path to store downloaded images   |
# *===================================*
image_path=/var/lib/zmeventnotification/images

# *==================================================================*
# | Select the Pattern used for all monitors                         |
# | https://github.com/pjreddie/darknet/blob/master/data/coco.names  |
# | for everything, make it .*                                       |
# *==================================================================*
# detect_pattern=(person|car|motorbike|bus|truck|bicycle|bird|cat|dog|horse|handbag|suitcase|baseball bat|bottle|knife)
detect_pattern=.*

# *=============================*
# | Global config of frame_id   |
# | bestmatch, alarm, snapshot  |
# | OR a specific frame ID      |
# *=============================*
frame_id=bestmatch

# *=======================*
# | Resize while analysis |
# *=======================*
resize=1200

# *===============*
# |  CHANGE ONLY  |
# |  FOR DEBUG    |
# *===============*
delete_after_analyze=yes
write_debug_image=no

# *============================*
# | Write Image Result to ZM   |
# | Image with Rectangle, ...  |
# | View from Console ZM       |
# *============================*
write_image_to_zm=yes

# *============================*
# | Write percent of Analysis  |
# | hog/face shows 100% always |
# *============================*
show_percent=no

# *============================*
# |  SET POLYGONS AREA COLORS  |
# *============================*
poly_color=(255,255,255)
#import_zm_zones=yes


# *=========================================================================================================*
# |                                   CONFIGURATION PER MONITOR                                             |
# *=========================================================================================================*
#
# *==================================*
# |     MONITOR CONFIGURATION        |
# *==================================*
#
# *=======================*
# |      MONITOR ID 1     |
# |      IPCAM LIVING     |
# *=======================*
[monitor-1]
# Select the Pattern
detect_pattern=(person|bicycle|bird|cat|dog|handbag|suitcase|baseball bat|bottle|knife)

# DEBUG
delete_after_analyze=no
write_debug_image=yes

# select model sequence
detection_mode=first
models=face,yolo

# select the frame ID
frame_id=bestmatch

# try diff. sizes. In my case, 600 was enough
#resize=600

# Select the face Detector
face_model=cnn


# *======================*
# |      MONITOR 2       |
# |      IPCAM CARPOR    |
# *======================*
[monitor-2]
# Select the Pattern
detect_pattern=(person|car|motorbike|truck|bicycle|handbag|suitcase|baseball bat|bottle|knife)

# DEBUG
delete_after_analyze=no
write_debug_image=yes

# select model sequence
detection_mode=first
models=face,yolo

# select the frame ID
frame_id=bestmatch

# try diff. sizes. In my case, 600 was enough
#resize=600

# Select the face Detector
face_model=cnn


# *======================*
# |      MONITOR 3       |
# |      IPCAM GARAGE    |
# *======================*
[monitor-3]
# Select the Pattern
detect_pattern=(person|car|motorbike|truck|bicycle|handbag|suitcase|baseball bat|bottle|knife)

# DEBUG
delete_after_analyze=no
write_debug_image=yes

# select model sequence
detection_mode=first
models=face,yolo, alpr

# select the frame ID
frame_id=bestmatch

# try diff. sizes. In my case, 600 was enough
#resize=600

# Select the face Detector
face_model=cnn

# *======================*
# |      MONITOR 4       |
# |      IPCAM FACADE    |
# *======================*
[monitor-4]
# Select the Pattern
detect_pattern=(person|car|motorbike|truck|bicycle|handbag|suitcase|baseball bat|bottle|knife)

# DEBUG
delete_after_analyze=no
write_debug_image=yes

# select model sequence
detection_mode=first
models=face,yolo, alpr

# select the frame ID
frame_id=bestmatch

# try diff. sizes. In my case, 600 was enough
#resize=600

# Select the face Detector
face_model=cnn

# *======================*
# |      MONITOR 5       |
# |      IPCAM COURS     |
# *======================*
[monitor-5]
# Select the Pattern
detect_pattern=(person|motorbike|bicycle|handbag|suitcase|baseball bat|bottle|knife)

# DEBUG
delete_after_analyze=no
write_debug_image=yes

# select model sequence
detection_mode=first
models=face,yolo, alpr

# select the frame ID
frame_id=bestmatch

# try diff. sizes. In my case, 600 was enough
#resize=600

# Select the face Detector
face_model=cnn

# *======================*
# |      MONITOR 6       |
# |      IPCAM PORTE     |
# *======================*
[monitor-6]
# Select the Pattern
detect_pattern=(person|car|motorbike|bicycle|handbag|suitcase|baseball bat|bottle|knife)

# DEBUG
delete_after_analyze=no
write_debug_image=yes

# select model sequence
detection_mode=first
models=face,yolo, alpr

# select the frame ID
frame_id=bestmatch

# try diff. sizes. In my case, 600 was enough
#resize=600

# Select the face Detector
face_model=cnn

# *=========================================================================================================*
# |                               CONFIGURATION FOR YOLO DETECTOR                                           |
# *=========================================================================================================*
[yolo]
yolo_type=full
#yolo_type=tiny
yolo_min_confidence=0.5

config=/var/lib/zmeventnotification/models/yolov3/yolov3.cfg
weights=/var/lib/zmeventnotification/models/yolov3/yolov3.weights
labels=/var/lib/zmeventnotification/models/yolov3/yolov3_classes.txt

tiny_config=/var/lib/zmeventnotification/models/tinyyolo/yolov3-tiny.cfg
tiny_weights=/var/lib/zmeventnotification/models/tinyyolo/yolov3-tiny.weights
tiny_labels=/var/lib/zmeventnotification/models/tinyyolo/yolov3-tiny.txt

# *=========================================================================================================*
# |                                CONFIGURATION FOR HoG DETECTOR                                           |
# *=========================================================================================================*
[hog]
stride=(4,4)
padding=(8,8)
scale=1.05
mean_shift=-1

# *=========================================================================================================*
# |                                CONFIGURATION FOR FACE RECOGNIZER                                        |
# *=========================================================================================================*
[face]
known_images_path=/var/lib/zmeventnotification/known_faces

# read https://github.com/ageitgey/face_recognition/wiki/Face-Recognition-Accuracy-Problems
# read https://github.com/ageitgey/face_recognition#automatically-find-all-the-faces-in-an-image
# and play around

# quick overview:

# upsample_times is how many times to upsample input images (for small faces, for example)
# model can be hog or cnn. cnn may be more accurate, but I haven't found it to be
# num_jitters is how many times to distort images
face_num_jitters=1
face_model=hog
face_upsample_times=1

# *===================*
# | UNKNOW FACE NAME  |
# *===================*
unknown_face_name=unknown


# *=========================================================================================================*
# |                                  CONFIGURATION FOR ALPR                                                 |
# *=========================================================================================================*
[alpr]
alpr_use_after_detection_only=yes

# *==========================================================*
# |          CONFIGURATION FOR PLATE RECOGNIZER              |
# *==========================================================*
#
alpr_service=plate_recognizer

# *==========================*
# | Link of Plate Recognizer |
# *==========================*
#
# alpr_url=https://localhost:8080

# *===============*
# | ALPR API KEY  |
# *===============*
#
alpr_key=KEY

# *=====================*
# |     ALPR PATTERN    |
# *=====================*
#
# alpr_pattern=.*

# *=====================*
# | LOG usage statistic |
# *=====================*
#
platerec_stats=no

# *==========================*
# | PLATE REGION US/CN/KR/EU |
# *==========================*
#
# platerec_regions=['us','cn','kr', 'eu']

# minimal confidence for actually detecting a plate
platerec_min_dscore=0.1

# minimal confidence for the translated text
platerec_min_score=0.2



# *==========================================================*
# |               CONFIGURATION FOR openALPR                 |
# *==========================================================*
#
# ----| If you are using openALPR |-----

#alpr_service=open_alpr

#alpr_key=SECRET

# For an explanation of params, see http://doc.openalpr.com/api/?api=cloudapi
#openalpr_recognize_vehicle=1

#openalpr_country=be

#openalpr_state=ca

# openalpr returns percents, but we convert to between 0 and 1
#openalpr_min_confidence=0.3


